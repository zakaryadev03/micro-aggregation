pipeline {
    agent any
    tools {
        nodejs 'nodejs23'
    }
    environment{
        SCANNER_HOME = tool "sonar-scanner"
    }
    stages {
        stage('Git checkout') {
            steps {
                git branch: 'dev', url: 'https://github.com/zakaryadev03/micro-aggregation.git'
            }
        }
        
        stage('Gitleaks scan') {
            steps {
                sh 'gitleaks detect --source ./aggregator --exit-code 1'
            }
        }

        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=NodeJS-Project \
                            -Dsonar.projectKey=NodeJS-Project '''
                }
            }
        }
        
        stage('Quality gate check') {
            steps {
                timeout(time: 1, unit: 'HOURS') {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        
        stage('Trivy Fs Scan') {
            steps {
                sh 'trivy fs --format table -o fs-report.html .'
            }
        }
        
        stage('Build and push Docker Backend Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred') {
                        dir('aggregator'){
                            sh 'docker build -t zakaryab2003/aggregator:latest .'
                            sh 'trivy image --format table -o Backend-image-report.html zakaryab2003/aggregator:latest'
                            sh 'docker push zakaryab2003/aggregator:latest'
                        }
                    }
                }
            }
        }
        
    }
}